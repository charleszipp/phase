<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net46;netstandard2.0</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Authors>Charles Zipp</Authors>
    <Company />
    <Description>Phase is an in-process, platform agnostic, tenant isolating, CQRS and Event Sourcing for stateful services. Phase operates against in-memomry state as its primary source of data for both writes and reads. It then provides an abstraction for persisting the events to a durable store. This allows the entire framework to be executed end-to-end, in-proc from any platform. It also allows it to serve both commands and queries in sub-millisecond times</Description>
    <Copyright>2018</Copyright>
    <PackageLicenseUrl>https://github.com/charleszipp/phase/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/charleszipp/phase</PackageProjectUrl>
    <RepositoryUrl>https://github.com/charleszipp/phase.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>cqrs; event; sourcing; actor;</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="MongoDB.Bson" Version="2.7.0" />
    <PackageReference Include="System.Reflection.DispatchProxy" Version="4.5.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Phase.Interfaces\Phase.Interfaces.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="DeepCopy">
      <Version>1.0.3</Version>
    </PackageReference>
  </ItemGroup>

</Project>
